package leetcode.程序员面试金典;
//配对交换。编写程序，交换某个整数的奇数位和偶数位，尽量使用较少的指令（也就是说，位0与位1交换，位2与位3交换，以此类推）。
//
//示例1:
//
// 输入：num = 2（或者0b10）
// 输出 1 (或者 0b01)
//示例2:
//
// 输入：num = 3
// 输出：3
//提示:
//
//num的范围在[0, 2^30 - 1]之间，不会发生整数溢出。
//
//来源：力扣（LeetCode）
//链接：https://leetcode.cn/problems/exchange-lcci
//著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

/**
 * @author mayanwei
 * @date 2023-05-18.
 */
public class _05_07_配对交换{
    /**
     * swapOddEvenBits
     * 要操作一对一对的位，必定比较麻烦，效率也不见得会高。
     * 我们可以这样做：先操作奇数位，再操作偶数位。
     * 将数字n的奇数位左移或者右移一位可以采用掩码实现。
     * 10101010（0xAA）作为掩码，提取奇数位，并将它右移一位，移动到偶数位的位置。
     * 对于偶数位，可以实施同样的操作。
     * 最后将两次操作的结果合并成一个值。
     */
    class Solution{
        public int exchangeBits(int x) {
            return ((x & 0xaaaaaaaa) >>> 1) | ((x & 0x55555555) << 1);
        }
    }
}
